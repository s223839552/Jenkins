pipeline {
    agent any

    environment {
        EMAIL_RECIPIENT = 'dileka.thilakarathna1@gmail.com'
    }

    stages {
        stage('Build') {
            steps {
                echo 'Building the application...'
                script {
                    // Build the application using a custom build script or command
                    sh './build.sh'
                }
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit and integration tests...'
                script {
                    // Run unit and integration tests using a custom test script or command
                    sh './run_tests.sh'
                }
            }
            post {
                always {
                    // Send email notification with the test results
                    emailext (
                        to: "${EMAIL_RECIPIENT}",
                        subject: "Unit and Integration Tests - ${currentBuild.currentResult}",
                        body: """Build ${env.BUILD_NUMBER} - ${currentBuild.currentResult}
                        Please see the attached logs for more details.""",
                        attachLog: true
                    )
                }
            }
        }

        stage('Code Analysis') {
            steps {
                echo 'Performing code analysis...'
                script {
                    // Run code analysis using a custom script or tool
                    // Example: Run ESLint for a JavaScript project
                    sh './run_code_analysis.sh'
                }
            }
        }

        stage('Security Scan') {
            steps {
                echo 'Performing security scan...'
                script {
                    // Run security scan using a custom script or tool
                    // Example: Run a security scan with a tool like OWASP ZAP
                    sh './run_security_scan.sh'
                }
            }
            post {
                always {
                    // Send email notification with the security scan results
                    emailext (
                        to: "${EMAIL_RECIPIENT}",
                        subject: "Security Scan - ${currentBuild.currentResult}",
                        body: """Build ${env.BUILD_NUMBER} - ${currentBuild.currentResult}
                        Please see the attached logs for more details.""",
                        attachLog: true
                    )
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging...'
                script {
                    // Deploy to AWS staging environment using AWS CLI
                    sh '''
                    aws deploy create-deployment \
                        --application-name MyApp \
                        --deployment-group-name MyStagingGroup \
                        --s3-location bucket=my-bucket,key=my-app.zip,bundleType=zip
                    '''
                }
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging...'
                script {
                    // Run integration tests using a custom script or tool
                    // Example: Run Selenium tests
                    sh './run_integration_tests.sh'
                }
            }
        }

        stage('Deploy to Production') {
            steps {
                echo 'Deploying to production...'
                script {
                    // Deploy to AWS production environment using AWS CLI
                    sh '''
                    aws deploy create-deployment \
                        --application-name MyApp \
                        --deployment-group-name MyProductionGroup \
                        --s3-location bucket=my-bucket,key=my-app.zip,bundleType=zip
                    '''
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished.'
        }
    }
}
